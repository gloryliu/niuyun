package com.niuyunzhipin.greendao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.niuyun.hire.ui.bean.AllTagBean;
import com.niuyun.hire.ui.bean.DataBean;
import com.niuyun.hire.ui.bean.SearchHistoryBean;
import com.niuyun.hire.ui.bean.City;

import com.niuyunzhipin.greendao.AllTagBeanDao;
import com.niuyunzhipin.greendao.DataBeanDao;
import com.niuyunzhipin.greendao.SearchHistoryBeanDao;
import com.niuyunzhipin.greendao.CityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig allTagBeanDaoConfig;
    private final DaoConfig dataBeanDaoConfig;
    private final DaoConfig searchHistoryBeanDaoConfig;
    private final DaoConfig cityDaoConfig;

    private final AllTagBeanDao allTagBeanDao;
    private final DataBeanDao dataBeanDao;
    private final SearchHistoryBeanDao searchHistoryBeanDao;
    private final CityDao cityDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        allTagBeanDaoConfig = daoConfigMap.get(AllTagBeanDao.class).clone();
        allTagBeanDaoConfig.initIdentityScope(type);

        dataBeanDaoConfig = daoConfigMap.get(DataBeanDao.class).clone();
        dataBeanDaoConfig.initIdentityScope(type);

        searchHistoryBeanDaoConfig = daoConfigMap.get(SearchHistoryBeanDao.class).clone();
        searchHistoryBeanDaoConfig.initIdentityScope(type);

        cityDaoConfig = daoConfigMap.get(CityDao.class).clone();
        cityDaoConfig.initIdentityScope(type);

        allTagBeanDao = new AllTagBeanDao(allTagBeanDaoConfig, this);
        dataBeanDao = new DataBeanDao(dataBeanDaoConfig, this);
        searchHistoryBeanDao = new SearchHistoryBeanDao(searchHistoryBeanDaoConfig, this);
        cityDao = new CityDao(cityDaoConfig, this);

        registerDao(AllTagBean.class, allTagBeanDao);
        registerDao(DataBean.class, dataBeanDao);
        registerDao(SearchHistoryBean.class, searchHistoryBeanDao);
        registerDao(City.class, cityDao);
    }
    
    public void clear() {
        allTagBeanDaoConfig.clearIdentityScope();
        dataBeanDaoConfig.clearIdentityScope();
        searchHistoryBeanDaoConfig.clearIdentityScope();
        cityDaoConfig.clearIdentityScope();
    }

    public AllTagBeanDao getAllTagBeanDao() {
        return allTagBeanDao;
    }

    public DataBeanDao getDataBeanDao() {
        return dataBeanDao;
    }

    public SearchHistoryBeanDao getSearchHistoryBeanDao() {
        return searchHistoryBeanDao;
    }

    public CityDao getCityDao() {
        return cityDao;
    }

}
